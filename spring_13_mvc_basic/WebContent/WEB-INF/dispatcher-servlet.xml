<?xml version="1.0" encoding="UTF-8"?>
<beans 	xmlns="http://www.springframework.org/schema/beans"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- 	
		DispatcherServlet은 Spring 컨테이너에서 controller 객체를 검색하기 때문에
		Controller를 bean으로 등록해 주어야 함
		 - HelloController.java에 @Controller 애노테이션이 있어야 함
		
		## 참고사항 - 
		spring3.0에서의 controller 클래스 개발 권장
		1. 애노테이션 사용 권장
		2. 구번전 Spring MVC는 특정 클래스 상속 등으로 개발 및 3버전에서도 spring api사용해도 됨
		    가급적 MVC는 애노테이션 권장
	-->
	<bean name="/helloController" class="hello.HelloController" />
	
	<!-- 
		1. ViewResolver : 컨트롤러의 처리결과를 보여줄 뷰를 선택하는 방식
		2. JSP를 view 기술로 사용할 경우 InternalResourceViewResolver를 bean으로 등록 
		3. <property name="prefix" value="/jsp가 내장된 경로,단 파일명 앞단까지의 경로"/>	
			<property name="suffix" value=".jsp"  />		
			가령 view/ok.jsp 인 경우
			<property name="prefix" value="/view/"></property>		
	-->
	<bean id="viewResolver" 
		  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			 	
		<!-- 
			view 위치 및 이름 설정 : 
			1. value="/" : /WebContent/뷰이름.jsp(개발) => /contextName/뷰이름.jsp(운영)
			2. /WEB-INF/views/: /WebContent/WEB-INF/views/뷰이름.jsp => 
		-->
		<property name="prefix" value="/"></property>		
		<property name="suffix" value=".jsp"></property>
				
	</bean>
	
</beans>










